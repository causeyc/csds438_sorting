
@book{cormen_introduction_2009,
	title = {Introduction to {Algorithms}},
	isbn = {978-0-262-53305-8},
	abstract = {Some books on algorithms are rigorous but incomplete; others cover masses of material but lack rigor. Introduction to Algorithms uniquely combines rigor and comprehensiveness. The book covers a broad range of algorithms in depth, yet makes their design and analysis accessible to all levels of readers. Each chapter is relatively self-contained and can be used as a unit of study. The algorithms are described in English and in a pseudocode designed to be readable by anyone who has done a little programming. The explanations have been kept elementary without sacrificing depth of coverage or mathematical rigor.The first edition became a widely used text in universities worldwide as well as the standard reference for professionals. The second edition featured new chapters on the role of algorithms, probabilistic analysis and randomized algorithms, and linear programming. The third edition has been revised and updated throughout. It includes two completely new chapters, on van Emde Boas trees and multithreaded algorithms, substantial additions to the chapter on recurrence (now called "Divide-and-Conquer"), and an appendix on matrices. It features improved treatment of dynamic programming and greedy algorithms and a new notion of edge-based flow in the material on flow networks. Many new exercises and problems have been added for this edition. As of the third edition, this textbook is published exclusively by the MIT Press.},
	language = {en},
	publisher = {MIT Press},
	author = {Cormen, Thomas H. and Leiserson, Charles E. and Rivest, Ronald L. and Stein, Clifford},
	month = jul,
	year = {2009},
	note = {Google-Books-ID: aefUBQAAQBAJ},
	keywords = {Computers / Programming / Algorithms, Computers / Reference}
}
@article{hoare_algorithm_1961,
	title = {Algorithm 64: {Quicksort}},
	volume = {4},
	issn = {0001-0782},
	shorttitle = {Algorithm 64},
	url = {https://doi.org/10.1145/366622.366644},
	doi = {10.1145/366622.366644},
	number = {7},
	urldate = {2020-11-09},
	journal = {Communications of the ACM},
	author = {Hoare, C. A. R.},
	month = jul,
	year = {1961},
	pages = {321}
}
@article{knuth_art_nodate,
	title = {The {Art} of {Computer} {Programming}, {Volume} 3: {Sorting} and {Searching}, {Second} {Edition}},
	language = {en},
	author = {Knuth, Donald E},
	pages = {1061},
	file = {Knuth - The Art of Computer Programming, Volume 3 Sorting.pdf:C\:\\Users\\bgpierce\\Zotero\\storage\\FN33PUV2\\Knuth - The Art of Computer Programming, Volume 3 Sorting.pdf:application/pdf}
}
@InProceedings{auger_et_al:LIPIcs:2018:9467,
	author =	{Nicolas Auger and Vincent Jug{\'e} and Cyril Nicaud and Carine Pivoteau},
	title =	{{On the Worst-Case Complexity of TimSort}},
	booktitle =	{26th Annual European Symposium on Algorithms (ESA 2018)},
	pages =	{4:1--4:13},
	series =	{Leibniz International Proceedings in Informatics (LIPIcs)},
	ISBN =	{978-3-95977-081-1},
	ISSN =	{1868-8969},
	year =	{2018},
	volume =	{112},
	editor =	{Yossi Azar and Hannah Bast and Grzegorz Herman},
	publisher =	{Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
	address =	{Dagstuhl, Germany},
	URL =		{http://drops.dagstuhl.de/opus/volltexte/2018/9467},
	URN =		{urn:nbn:de:0030-drops-94678},
	doi =		{10.4230/LIPIcs.ESA.2018.4},
	annote =	{Keywords: Sorting algorithms, Merge sorting algorithms, TimSort, Analysis of algorithms}
}

@article{forsythe_algorithms_1964,
	title = {Algorithm 232: Heapsort},
	volume = {7},
	issn = {0001-0782},
	url = {https://doi.org/10.1145/512274.512284},
	doi = {10.1145/512274.512284},
	number = {6},
	urldate = {2020-11-09},
	journal = {Communications of the ACM},
	author = {Forsythe, G. E.},
	month = jun,
	year = {1964},
	pages = {347--349}
}
@article{blelloch_programming_1996,
	title = {Programming parallel algorithms},
	volume = {39},
	issn = {0001-0782},
	url = {https://doi.org/10.1145/227234.227246},
	doi = {10.1145/227234.227246},
	number = {3},
	urldate = {2020-11-09},
	journal = {Communications of the ACM},
	author = {Blelloch, Guy E.},
	month = mar,
	year = {1996},
	pages = {85--97},
	file = {Full Text PDF:C\:\\Users\\bgpierce\\Zotero\\storage\\4EYBYGVF\\Blelloch - 1996 - Programming parallel algorithms.pdf:application/pdf}
}
@misc{ openmp08,
	author = {{OpenMP Architecture Review Board}},
	title = {{OpenMP} Application Program Interface Version 3.0},
	month = may,
	year = 2008,
	url = {http://www.openmp.org/mp-documents/spec30.pdf}
}

@inproceedings{yoo_slurm_2003,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {{SLURM}: {Simple} {Linux} {Utility} for {Resource} {Management}},
	isbn = {978-3-540-39727-4},
	shorttitle = {{SLURM}},
	doi = {10.1007/10968987_3},
	abstract = {A new cluster resource management system called Simple Linux Utility Resource Management (SLURM) is described in this paper. SLURM, initially developed for large Linux clusters at the Lawrence Livermore National Laboratory (LLNL), is a simple cluster manager that can scale to thousands of processors. SLURM is designed to be flexible and fault-tolerant and can be ported to other clusters of different size and architecture with minimal effort. We are certain that SLURM will benefit both users and system architects by providing them with a simple, robust, and highly scalable parallel job execution environment for their cluster system.},
	language = {en},
	booktitle = {Job {Scheduling} {Strategies} for {Parallel} {Processing}},
	publisher = {Springer},
	author = {Yoo, Andy B. and Jette, Morris A. and Grondona, Mark},
	editor = {Feitelson, Dror and Rudolph, Larry and Schwiegelshohn, Uwe},
	year = {2003},
	keywords = {Exit Status, Lawrence Livermore National Laboratory, Message Authentication Code, Remote Execution, Resource Management System},
	pages = {44--60},
	file = {Springer Full Text PDF:C\:\\Users\\bgpierce\\Zotero\\storage\\782C23BX\\Yoo et al. - 2003 - SLURM Simple Linux Utility for Resource Managemen.pdf:application/pdf}
}
